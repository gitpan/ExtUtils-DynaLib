This is ExtUtils::DynaLib, a Perl 5 module for calling C functions in
dynamic libraries.  Example:

  use ExtUtils::DynaLib;
  $libm = new ExtUtils::DynaLib("-lm");
  $sinh = $libm->declare_sub("sinh", "d", "d");
  print "The hyperbolic sine of 3 is ", $sinh->(3), "\n";

	************************************************************
	************************************************************
	*****   THIS IS ALPHA CODE!!  USE AT YOUR OWN RISK!!   *****
	***** WHAT WORKS ON ONE MACHINE WON'T WORK ON ANOTHER! *****
	************************************************************
	************************************************************

That said, once you have unpacked the files, run the usual

  perl Makefile.PL

and see if it complains.  At this point, various things can go wrong.
First, your perl must be of the dynamic variety.  Be sure you answered
"y" when Configure asked, "Do you wish to use dynamic loading?".

Another thing Makefile.PL checks is whether the module has been tested
on a machine matching your system architecture.  If not, you will see
a message suggesting that you try this:

  perl Makefile.PL DECL=cdecl

(On a Sparc, use DECL=sparc instead.)  This time the module should
compile okay, but you MUST run

  make test

to see if your system's calling convention really is "cdecl".

If `make test' prints "not ok" even once (other than for failure to
load a dynamic C library), we should probably write a new calling
convention to accommodate your system.

Alternatively, if you are in a rush and just want to see it work, you
may try `perl Makefile.PL DECL=hack30' followed by `make test'.  But
PLEASE read the discussion of hack30 in DynaLib.pm or the
ExtUtils::DynaLib manpage.

Enjoy!
-jtobey@user1.channel1.com
